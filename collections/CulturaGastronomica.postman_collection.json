{
	"info": {
		"_postman_id": "42215459-7623-4a5a-8f76-16a6b6ccd949",
		"name": "CulturaGastronomica",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27916063"
	},
	"item": [
		{
			"name": "Cultura",
			"item": [
				{
					"name": "CulturaGastronomica-Recetas",
					"item": [
						{
							"name": "Add a receta to a cultura",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/{{receta_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Add a receta to a cultura",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/{{cultura_id}}/{{receta_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"{{cultura_id}}",
												"{{receta_id}}"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"0f4b4bd4-609f-4b6c-abda-a2078b70b49d\",\n    \"nombre\": \"Cultura gastronómica Italiana\",\n    \"descripcion\": \"Si tratamos de imaginarnos la cultura gastronómica italiana, la mayoría de la gente va a pensar en pasta o pizza, espagueti o salchichas. Pero como la mayoría de las tierras antiguas y con una larga historia, Italia tiene una cocina muy variada. Las variaciones regionales no se aprecian en ninguna parte de una forma tan brusca como la diferencia que existe entre la cocina del norte y la cocina del sur de Italia.\",\n    \"productos\": [],\n    \"restaurantes\": [],\n    \"paises\": [],\n    \"recetas\": [\n        {\n            \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n            \"nombre\": \"Spaghetti alla Carbonara\",\n            \"descripcion\": \"Una clásica receta italiana hecha con huevo, queso, panceta y pimienta negra.\",\n            \"foto\": \"https://example.com/spaghetti-carbonara.jpg\",\n            \"proceso\": \"Cocinar la pasta al dente, mezclar con la panceta cocida, añadir la mezcla de huevo y queso, y servir con pimienta negra.\",\n            \"video\": \"https://example.com/spaghetti-carbonara-video.mp4\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Add an invalid receta to a cultura",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"recetas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": [
								{
									"name": "Add an invalid receta to a cultura",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/00000000-0000-0000-0000-000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"{{cultura_id}}",
												"recetas",
												"00000000-0000-0000-0000-000000000000"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The receta with the given id was not found\"\n}"
								}
							]
						},
						{
							"name": "Add a receta to an invalid cultura",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/recetas/{{receta_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"00000000-0000-0000-0000-000000000000",
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Add a receta to an invalid cultura",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/recetas/{{receta_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"00000000-0000-0000-0000-000000000000",
												"recetas",
												"{{receta_id}}"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The cultura with the given id was not found\"\n}"
								}
							]
						},
						{
							"name": "Get a receta of a cultura",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/{{receta_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Get a receta of a cultura",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/{{receta_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"{{cultura_id}}",
												"recetas",
												"{{receta_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n    \"nombre\": \"Spaghetti alla Carbonara\",\n    \"descripcion\": \"Una clásica receta italiana hecha con huevo, queso, panceta y pimienta negra.\",\n    \"foto\": \"https://example.com/spaghetti-carbonara.jpg\",\n    \"proceso\": \"Cocinar la pasta al dente, mezclar con la panceta cocida, añadir la mezcla de huevo y queso, y servir con pimienta negra.\",\n    \"video\": \"https://example.com/spaghetti-carbonara-video.mp4\"\n}"
								}
							]
						},
						{
							"name": "Get an invalid receta of a cultura",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"recetas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": [
								{
									"name": "Get an invalid receta of a cultura",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/00000000-0000-0000-0000-000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"{{cultura_id}}",
												"recetas",
												"00000000-0000-0000-0000-000000000000"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The receta with the given id was not found\"\n}"
								}
							]
						},
						{
							"name": "Get a receta of an invalid cultura",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/recetas/{{receta_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"00000000-0000-0000-0000-000000000000",
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Get a receta of an invalid cultura",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/recetas/{{receta_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"00000000-0000-0000-0000-000000000000",
												"recetas",
												"{{receta_id}}"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The cultura with the given id was not found\"\n}"
								}
							]
						},
						{
							"name": "Get a receta non-associated to a cultura",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/{{receta_id_2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"recetas",
										"{{receta_id_2}}"
									]
								}
							},
							"response": [
								{
									"name": "Get a receta non-associated to a cultura",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/{{receta_id_2}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"{{cultura_id}}",
												"recetas",
												"{{receta_id_2}}"
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"statusCode\": 412,\n    \"message\": \"The receta with the given id is not associated to the cultura\"\n}"
								}
							]
						},
						{
							"name": "Get all recetas of a cultura",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"recetas"
									]
								}
							},
							"response": [
								{
									"name": "Get all recetas of a cultura",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"{{cultura_id}}",
												"recetas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n        \"nombre\": \"Spaghetti alla Carbonara\",\n        \"descripcion\": \"Una clásica receta italiana hecha con huevo, queso, panceta y pimienta negra.\",\n        \"foto\": \"https://example.com/spaghetti-carbonara.jpg\",\n        \"proceso\": \"Cocinar la pasta al dente, mezclar con la panceta cocida, añadir la mezcla de huevo y queso, y servir con pimienta negra.\",\n        \"video\": \"https://example.com/spaghetti-carbonara-video.mp4\"\n    }\n]"
								}
							]
						},
						{
							"name": "Get all recetas of an invalid cultura",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/recetas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"00000000-0000-0000-0000-000000000000",
										"recetas"
									]
								}
							},
							"response": [
								{
									"name": "Get all recetas of an invalid cultura",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/recetas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"00000000-0000-0000-0000-000000000000",
												"recetas"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The cultura with the given id was not found\"\n}"
								}
							]
						},
						{
							"name": "Update recetas of a cultura",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": \"{{receta_id_2}}\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"recetas",
										""
									]
								}
							},
							"response": [
								{
									"name": "Update recetas of a cultura",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"id\": \"{{receta_id_2}}\"\r\n    }\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"{{cultura_id}}",
												"recetas",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"0f4b4bd4-609f-4b6c-abda-a2078b70b49d\",\n    \"nombre\": \"Cultura gastronómica Italiana\",\n    \"descripcion\": \"Si tratamos de imaginarnos la cultura gastronómica italiana, la mayoría de la gente va a pensar en pasta o pizza, espagueti o salchichas. Pero como la mayoría de las tierras antiguas y con una larga historia, Italia tiene una cocina muy variada. Las variaciones regionales no se aprecian en ninguna parte de una forma tan brusca como la diferencia que existe entre la cocina del norte y la cocina del sur de Italia.\",\n    \"productos\": [],\n    \"restaurantes\": [],\n    \"paises\": [],\n    \"recetas\": [\n        {\n            \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n            \"nombre\": \"Spaghetti alla Carbonara\",\n            \"descripcion\": \"Una clásica receta italiana hecha con huevo, queso, panceta y pimienta negra.\",\n            \"foto\": \"https://example.com/spaghetti-carbonara.jpg\",\n            \"proceso\": \"Cocinar la pasta al dente, mezclar con la panceta cocida, añadir la mezcla de huevo y queso, y servir con pimienta negra.\",\n            \"video\": \"https://example.com/spaghetti-carbonara-video.mp4\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Update invalid recetas of a cultura",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"recetas",
										""
									]
								}
							},
							"response": [
								{
									"name": "Update invalid recetas of a cultura",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n    }\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"{{cultura_id}}",
												"recetas",
												""
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The receta with the given id was not found\"\n}"
								}
							]
						},
						{
							"name": "Update recetas of an invalid cultura",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": \"{{recetas_id_2}}\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/recetas/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"00000000-0000-0000-0000-000000000000",
										"recetas",
										""
									]
								}
							},
							"response": [
								{
									"name": "Update recetas of an invalid cultura",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"id\": \"{{recetas_id_2}}\"\r\n    }\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/recetas/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"00000000-0000-0000-0000-000000000000",
												"recetas",
												""
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The cultura with the given id was not found\"\n}"
								}
							]
						},
						{
							"name": "Delete a receta of a cultura",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/{{receta_id_2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"recetas",
										"{{receta_id_2}}"
									]
								}
							},
							"response": [
								{
									"name": "Delete a receta of a cultura",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/{{receta_id_2}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"{{cultura_id}}",
												"recetas",
												"{{receta_id_2}}"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete a receta of an invalid cultura",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/recetas/{{receta_id_2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"00000000-0000-0000-0000-000000000000",
										"recetas",
										"{{receta_id_2}}"
									]
								}
							},
							"response": [
								{
									"name": "Delete a receta of an invalid cultura",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/recetas/{{receta_id_2}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"00000000-0000-0000-0000-000000000000",
												"recetas",
												"{{receta_id_2}}"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete an invalid receta of a cultura",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"recetas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": [
								{
									"name": "Delete an invalid receta of a cultura",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/00000000-0000-0000-0000-000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"{{cultura_id}}",
												"recetas",
												"00000000-0000-0000-0000-000000000000"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete a receta non-associated to a cultura",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/{{receta_id_1}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"recetas",
										"{{receta_id_1}}"
									]
								}
							},
							"response": [
								{
									"name": "Delete a receta non-associated to a cultura",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/{{receta_id_1}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"{{cultura_id}}",
												"recetas",
												"{{receta_id_1}}"
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "CulturaGastronomica-Productos",
					"item": [
						{
							"name": "Add a producto to a cultura",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos/{{productos_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"productos",
										"{{productos_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Add a producto to a cultura",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos/{{productos_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"{{cultura_id}}",
												"productos",
												"{{productos_id}}"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"0f4b4bd4-609f-4b6c-abda-a2078b70b49d\",\n    \"nombre\": \"Cultura gastronómica Italiana\",\n    \"descripcion\": \"Si tratamos de imaginarnos la cultura gastronómica italiana, la mayoría de la gente va a pensar en pasta o pizza, espagueti o salchichas. Pero como la mayoría de las tierras antiguas y con una larga historia, Italia tiene una cocina muy variada. Las variaciones regionales no se aprecian en ninguna parte de una forma tan brusca como la diferencia que existe entre la cocina del norte y la cocina del sur de Italia.\",\n    \"productos\": [\n        {\n    \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n    \"nombre\": \"Venus de Milo de Jalea\",\n    \"historia\": \"Homero ve este caramelo en la Feria industrial del Dulce y, luego de que Marge tirara accidentalmente sus caramelos al piso, la roba. Al llegar a la casa, la Venus de Milo se pierde entre los demas dulces, pero luego resulta que se había pegado en los pantalones de Ashley Grant, la niñera. La chica piensa que Homero, al sacarla, trató de abusarla sexualmente, pero luego ve que Homero solo quiso el dulce y lo perdona.\",\n    \"descripcion\": \"Es la jalea más rara de todas, esculpida por artesanos de jalea, exclusivos del medio de la jalea\",\n    \"categoria\": {\n            \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n            \"nombre\": \"Jaleas\",\n            \"codigo\": \"123-456-789\"\n    }\n}\n    ],\n    \"restaurantes\": [],\n    \"paises\": [],\n    \"recetas\": []\n}"
								}
							]
						},
						{
							"name": "Add an invalid producto to a cultura",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"productos",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": [
								{
									"name": "Add an invalid producto to a cultura",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos/00000000-0000-0000-0000-000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"{{cultura_id}}",
												"productos",
												"00000000-0000-0000-0000-000000000000"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The producto with the given id was not found\"\n}"
								}
							]
						},
						{
							"name": "Add a producto to an invalid cultura",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/productos/{{productos_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"00000000-0000-0000-0000-000000000000",
										"productos",
										"{{productos_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Add a producto to an invalid cultura",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/productos/{{productos_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"00000000-0000-0000-0000-000000000000",
												"productos",
												"{{productos_id}}"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The cultura with the given id was not found\"\n}"
								}
							]
						},
						{
							"name": "Get all productos of a cultura",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"productos"
									]
								}
							},
							"response": [
								{
									"name": "Get all productos of a cultura",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"{{cultura_id}}",
												"productos"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "[\n    {\n    \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n    \"nombre\": \"Venus de Milo de Jalea\",\n    \"historia\": \"Homero ve este caramelo en la Feria industrial del Dulce y, luego de que Marge tirara accidentalmente sus caramelos al piso, la roba. Al llegar a la casa, la Venus de Milo se pierde entre los demas dulces, pero luego resulta que se había pegado en los pantalones de Ashley Grant, la niñera. La chica piensa que Homero, al sacarla, trató de abusarla sexualmente, pero luego ve que Homero solo quiso el dulce y lo perdona.\",\n    \"descripcion\": \"Es la jalea más rara de todas, esculpida por artesanos de jalea, exclusivos del medio de la jalea\",\n    \"categoria\": {\n            \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n            \"nombre\": \"Jaleas\",\n            \"codigo\": \"123-456-789\"\n        }\n    }\n]"
								}
							]
						},
						{
							"name": "Get all productos of an invalid cultura",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/productos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"00000000-0000-0000-0000-000000000000",
										"productos"
									]
								}
							},
							"response": [
								{
									"name": "Get all productos of an invalid cultura",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/productos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"00000000-0000-0000-0000-000000000000",
												"productos"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The cultura with the given id was not found\"\n}"
								}
							]
						},
						{
							"name": "Update productos of a cultura",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": \"{{productos_id}}\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"productos"
									]
								}
							},
							"response": [
								{
									"name": "Update productos of a cultura",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"id\": \"{{productos_id}}\"\r\n    }\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"{{cultura_id}}",
												"productos",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"0f4b4bd4-609f-4b6c-abda-a2078b70b49d\",\n    \"nombre\": \"Cultura gastronómica Italiana\",\n    \"descripcion\": \"Si tratamos de imaginarnos la cultura gastronómica italiana, la mayoría de la gente va a pensar en pasta o pizza, espagueti o salchichas. Pero como la mayoría de las tierras antiguas y con una larga historia, Italia tiene una cocina muy variada. Las variaciones regionales no se aprecian en ninguna parte de una forma tan brusca como la diferencia que existe entre la cocina del norte y la cocina del sur de Italia.\",\n    \"productos\": [{\n    \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n    \"nombre\": \"Venus de Milo de Jalea\",\n    \"historia\": \"Homero ve este caramelo en la Feria industrial del Dulce y, luego de que Marge tirara accidentalmente sus caramelos al piso, la roba. Al llegar a la casa, la Venus de Milo se pierde entre los demas dulces, pero luego resulta que se había pegado en los pantalones de Ashley Grant, la niñera. La chica piensa que Homero, al sacarla, trató de abusarla sexualmente, pero luego ve que Homero solo quiso el dulce y lo perdona.\",\n    \"descripcion\": \"Es la jalea más rara de todas, esculpida por artesanos de jalea, exclusivos del medio de la jalea\",\n    \"categoria\": {\n            \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n            \"nombre\": \"Jaleas\",\n            \"codigo\": \"123-456-789\"\n    }\n}],\n    \"restaurantes\": [],\n    \"paises\": [],\n    \"recetas\": []\n}"
								}
							]
						},
						{
							"name": "Update invalid productos of a cultura",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"productos",
										""
									]
								}
							},
							"response": [
								{
									"name": "Update invalid productos of a cultura",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n    }\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"{{cultura_id}}",
												"productos",
												""
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The product with the given id was not found\"\n}"
								}
							]
						},
						{
							"name": "Update productos of an invalid cultura",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": \"{{productos_id}}\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/productos/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"00000000-0000-0000-0000-000000000000",
										"productos",
										""
									]
								}
							},
							"response": [
								{
									"name": "Update productos of an invalid cultura",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"id\": \"{{productos_id}}\"\r\n    }\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/productos/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"00000000-0000-0000-0000-000000000000",
												"productos",
												""
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The cultura with the given id was not found\"\n}"
								}
							]
						},
						{
							"name": "Delete a producto of a cultura",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos/{{productos_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"productos",
										"{{productos_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Delete a producto of a cultura",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos/{{productos_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"{{cultura_id}}",
												"productos",
												"{{productos_id}}"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete a producto of an invalid cultura",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/productos/{{productos_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"00000000-0000-0000-0000-000000000000",
										"productos",
										"{{productos_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Delete a producto of an invalid cultura",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/productos/{{productos_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"00000000-0000-0000-0000-000000000000",
												"productos",
												"{{productos_id}}"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete an invalid producto of a cultura",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"productos",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": [
								{
									"name": "Delete an invalid producto of a cultura",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos/00000000-0000-0000-0000-000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"{{cultura_id}}",
												"productos",
												"00000000-0000-0000-0000-000000000000"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete a producto non-associated to a cultura",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos/{{productos_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"productos",
										"{{productos_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Delete a producto non-associated to a cultura",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos/{{productos_id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturas",
												"{{cultura_id}}",
												"productos",
												"{{productos_id}}"
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "CulturaGastronomica-Restaurante",
					"item": [
						{
							"name": "Add a restaurant to a cultura",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"restaurant_id\": \"123e4567-e89b-12d3-a456-426614174000\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/culturasGastronomicas/:culturaGastronomica_id/restaurants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturasGastronomicas",
										":culturaGastronomica_id",
										"restaurants"
									],
									"variable": [
										{
											"key": "culturaGastronomica_id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "Add a restaurant to a cultura",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturasGastronomicas/:culturaGastronomica_id/restaurants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturasGastronomicas",
												":culturaGastronomica_id",
												"restaurants"
											],
											"variable": [
												{
													"key": "culturaGastronomica_id",
													"value": ""
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add an invalid restaurant to a cultura",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturasGastronomicas/:culturaGastronomica_id/restaurants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturasGastronomicas",
										":culturaGastronomica_id",
										"restaurants"
									],
									"variable": [
										{
											"key": "culturaGastronomica_id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "Add an invalid restaurant to a cultura",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturasGastronomicas/:culturaGastronomica_id/restaurants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturasGastronomicas",
												":culturaGastronomica_id",
												"restaurants"
											],
											"variable": [
												{
													"key": "culturaGastronomica_id",
													"value": ""
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add a restaurant to an invalid cultura",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"restaurant_id\": \"123e4567-e89b-12d3-a456-426614174000\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/culturasGastronomicas/00000000-0000-0000-0000-000000000000/restaurants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturasGastronomicas",
										"00000000-0000-0000-0000-000000000000",
										"restaurants"
									]
								}
							},
							"response": [
								{
									"name": "Add a restaurant to an invalid cultura",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"restaurant_id\": \"123e4567-e89b-12d3-a456-426614174000\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/culturasGastronomicas/00000000-0000-0000-0000-000000000000/restaurants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturasGastronomicas",
												"00000000-0000-0000-0000-000000000000",
												"restaurants"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get all restaurants of a cultura",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturasGastronomicas/:culturaGastronomica_id/restaurants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturasGastronomicas",
										":culturaGastronomica_id",
										"restaurants"
									],
									"variable": [
										{
											"key": "culturaGastronomica_id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "Get all restaurants of a cultura",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturasGastronomicas/:culturaGastronomica_id/restaurants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturasGastronomicas",
												":culturaGastronomica_id",
												"restaurants"
											],
											"variable": [
												{
													"key": "culturaGastronomica_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get all restaurants of an invalid cultura",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturasGastronomicas/00000000-0000-0000-0000-000000000000/restaurants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturasGastronomicas",
										"00000000-0000-0000-0000-000000000000",
										"restaurants"
									]
								}
							},
							"response": [
								{
									"name": "Get all restaurants of an invalid cultura",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturasGastronomicas/00000000-0000-0000-0000-000000000000/restaurants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturasGastronomicas",
												"00000000-0000-0000-0000-000000000000",
												"restaurants"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete a restaurant of a cultura",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturasGastronomicas/:culturaGastronomica_id/restaurants/:restaurant_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturasGastronomicas",
										":culturaGastronomica_id",
										"restaurants",
										":restaurant_id"
									],
									"variable": [
										{
											"key": "culturaGastronomica_id",
											"value": ""
										},
										{
											"key": "restaurant_id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "Delete a restaurant of a cultura",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturasGastronomicas/:culturaGastronomica_id/restaurants/:restaurant_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturasGastronomicas",
												":culturaGastronomica_id",
												"restaurants",
												":restaurant_id"
											],
											"variable": [
												{
													"key": "culturaGastronomica_id",
													"value": ""
												},
												{
													"key": "restaurant_id",
													"value": ""
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete a restaurant of an invalid cultura",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturasGastronomicas/00000000-0000-0000-0000-000000000000/restaurants/:restaurant_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturasGastronomicas",
										"00000000-0000-0000-0000-000000000000",
										"restaurants",
										":restaurant_id"
									],
									"variable": [
										{
											"key": "restaurant_id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "Delete a restaurant of an invalid cultura",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturasGastronomicas/00000000-0000-0000-0000-000000000000/restaurants/:restaurant_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturasGastronomicas",
												"00000000-0000-0000-0000-000000000000",
												"restaurants",
												":restaurant_id"
											],
											"variable": [
												{
													"key": "restaurant_id",
													"value": ""
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete an invalid restaurant of a cultura",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturasGastronomicas/{{culturaGastronomica_id}}/restaurants/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturasGastronomicas",
										"{{culturaGastronomica_id}}",
										"restaurants",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": [
								{
									"name": "Delete an invalid restaurant of a cultura",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/culturasGastronomicas/{{culturaGastronomica_id}}/restaurants/00000000-0000-0000-0000-000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"culturasGastronomicas",
												"{{culturaGastronomica_id}}",
												"restaurants",
												"00000000-0000-0000-0000-000000000000"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Add a cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set('culturaId', data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Cultura gastronomica Italiana\",\r\n    \"descripcion\": \"Si tratamos de imaginarnos la cultura gastronímica italiana, la mayoría de la gente va a pensar en pasta o pizza, espagueti o salchichas. Pero como la mayoría de las tierras antiguas y con una larga historia, Italia tiene una cocina muy variada. Las variaciones regionales no se aprecian en ninguna parte de una forma tan brusca como la diferencia que existe entre la cocina del norte y la cocina del sur de Italia.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/culturas",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas"
							]
						}
					},
					"response": [
						{
							"name": "Add a cultura",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"0f4b4bd4-609f-4b6c-abda-a2078b70b49d\",\n    \"nombre\": \"Cultura gastronomica Italiana\",\n    \"descripcion\": \"Si tratamos de imaginarnos la cultura gastronímica italiana, la mayoría de la gente va a pensar en pasta o pizza, espagueti o salchichas. Pero como la mayoría de las tierras antiguas y con una larga historia, Italia tiene una cocina muy variada. Las variaciones regionales no se aprecian en ninguna parte de una forma tan brusca como la diferencia que existe entre la cocina del norte y la cocina del sur de Italia.\"\n}"
						}
					]
				},
				{
					"name": "Get all culturas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of culturas > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{baseUrl}}/culturas",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas"
							]
						}
					},
					"response": [
						{
							"name": "Get all culturas",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"68430ab9-24ea-4fe8-a367-26abe2210ae7\",\n        \"nombre\": \"Cultura gastronómica Italiana\",\n        \"descripcion\": \"Si tratamos de imaginarnos la cultura gastronómica italiana, la mayoría de la gente va a pensar en pasta o pizza, espagueti o salchichas. Pero como la mayoría de las tierras antiguas y con una larga historia, Italia tiene una cocina muy variada. Las variaciones regionales no se aprecian en ninguna parte de una forma tan brusca como la diferencia que existe entre la cocina del norte y la cocina del sur de Italia.\",\n        \"productos\": [\n            {\n                \"id\": \"70aec118-897b-4a28-8402-c095d47669c3\",\n                \"nombre\": \"Pasta\",\n                \"descripcion\": \"Un alimento básico en la cocina italiana, hecha de harina de trigo y agua, y a veces huevo.\",\n                \"historia\": \"La pasta tiene una historia milenaria en Italia, con influencias que se remontan a la antigua Roma.\"\n            },\n            {\n                \"id\": \"ae0d91a8-8a5e-45d5-9249-ab057648d52a\",\n                \"nombre\": \"Pizza\",\n                \"descripcion\": \"Un plato tradicional italiano que consiste en una base de masa cubierta con salsa de tomate, queso y otros ingredientes.\",\n                \"historia\": \"La pizza moderna se originó en Nápoles, Italia, en el siglo XVIII.\"\n            }\n        ],\n        \"restaurantes\": [\n            {\n                \"id\": \"8b6a2fcd-0982-4f74-bbd6-c2be676dffca\",\n                \"nombre\": \"Osteria Francescana\",\n                \"ciudad\": \"Módena\",\n                \"pais\": \"Italia\",\n                \"estrellasMichelin\": 3,\n                \"fechaConsecucion\": \"2012-06-01\"\n            }\n        ],\n        \"paises\": [\n            {\n                \"id\": \"abb471f9-ab52-4044-ace7-c169793c6feb\",\n                \"nombre\": \"Italia\"\n            }\n        ],\n        \"recetas\": [\n            {\n                \"id\": \"ef26a58c-20d2-4373-8b61-19e31c4bbd44\",\n                \"nombre\": \"Spaghetti alla Carbonara\",\n                \"descripcion\": \"Una clásica receta italiana hecha con huevo, queso, panceta y pimienta negra.\",\n                \"foto\": \"https://example.com/spaghetti-carbonara.jpg\",\n                \"proceso\": \"Cocinar la pasta al dente, mezclar con la panceta cocida, añadir la mezcla de huevo y queso, y servir con pimienta negra.\",\n                \"video\": \"https://example.com/spaghetti-carbonara-video.mp4\"\n            }\n        ]\n    },\n    {\n        \"id\": \"bc6b9f1e-0a77-4818-9c8c-96ba9f3a49a9\",\n        \"nombre\": \"Cultura gastronómica Mexicana\",\n        \"descripcion\": \"La cultura gastronómica mexicana es conocida por su vibrante sabor y su rica historia, combinando ingredientes autóctonos con influencias españolas.\",\n        \"productos\": [\n            {\n                \"id\": \"39856bbd-d823-4873-8ce8-4d097176f802\",\n                \"nombre\": \"Maíz\",\n                \"descripcion\": \"Un grano esencial en la dieta mexicana, usado para hacer tortillas, tamales y más.\",\n                \"historia\": \"El maíz ha sido un alimento básico en México desde la época prehispánica.\"\n            },\n            {\n                \"id\": \"00f387a0-9007-488e-a580-6a314c6bfa27\",\n                \"nombre\": \"Chile\",\n                \"descripcion\": \"Un ingrediente picante utilizado en una variedad de salsas y platos.\",\n                \"historia\": \"Los chiles han sido cultivados en México durante más de 6,000 años.\"\n            }\n        ],\n        \"restaurantes\": [\n            {\n                \"id\": \"e17736a2-7d4c-478a-91d3-297dcb475df1\",\n                \"nombre\": \"Pujol\",\n                \"ciudad\": \"Ciudad de México\",\n                \"pais\": \"México\",\n                \"estrellasMichelin\": 2,\n                \"fechaConsecucion\": \"2017-04-15\"\n            }\n        ],\n        \"paises\": [\n            {\n                \"id\": \"edb9ce76-164b-4566-b901-2c96003d60fe\",\n                \"nombre\": \"México\"\n            }\n        ],\n        \"recetas\": [\n            {\n                \"id\": \"9ec7ebab-c942-4180-8129-2f8dc7754635\",\n                \"nombre\": \"Tacos al Pastor\",\n                \"descripcion\": \"Unos tacos hechos con carne de cerdo marinada, piña, cebolla y cilantro, servidos en tortillas de maíz.\",\n                \"foto\": \"https://example.com/tacos-al-pastor.jpg\",\n                \"proceso\": \"Marinar la carne, cocinarla en un trompo, cortarla en tiras y servirla en tortillas con piña, cebolla y cilantro.\",\n                \"video\": \"https://example.com/tacos-al-pastor-video.mp4\"\n            }\n        ]\n    }\n]"
						}
					]
				},
				{
					"name": "Get one cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/{{culturaId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{culturaId}}"
							]
						}
					},
					"response": [
						{
							"name": "Get one cultura",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"9a67d118-7758-4bcf-908d-db5816d478be\",\n    \"nombre\": \"Cultura gastronómica Italiana\",\n    \"descripcion\": \"Si tratamos de imaginarnos la cultura gastronómica italiana, la mayoría de la gente va a pensar en pasta o pizza, espagueti o salchichas. Pero como la mayoría de las tierras antiguas y con una larga historia, Italia tiene una cocina muy variada. Las variaciones regionales no se aprecian en ninguna parte de una forma tan brusca como la diferencia que existe entre la cocina del norte y la cocina del sur de Italia.\",\n    \"productos\": [\n        {\n            \"id\": \"e1662e83-b191-4e7b-a1a2-b7babfc53f69\",\n            \"nombre\": \"Pasta\",\n            \"descripcion\": \"Un alimento básico en la cocina italiana, hecha de harina de trigo y agua, y a veces huevo.\",\n            \"historia\": \"La pasta tiene una historia milenaria en Italia, con influencias que se remontan a la antigua Roma.\"\n        },\n        {\n            \"id\": \"15d0c174-ee3e-454f-bc7d-309f2fae1511\",\n            \"nombre\": \"Pizza\",\n            \"descripcion\": \"Un plato tradicional italiano que consiste en una base de masa cubierta con salsa de tomate, queso y otros ingredientes.\",\n            \"historia\": \"La pizza moderna se originó en Nápoles, Italia, en el siglo XVIII.\"\n        }\n    ],\n    \"restaurantes\": [\n        {\n            \"id\": \"bc75e49d-6024-4be0-b678-7d7520592235\",\n            \"nombre\": \"Osteria Francescana\",\n            \"ciudad\": \"Módena\",\n            \"pais\": \"Italia\",\n            \"estrellasMichelin\": 3,\n            \"fechaConsecucion\": \"2012-06-01\"\n        }\n    ],\n    \"paises\": [\n        {\n            \"id\": \"106c93ba-e164-4e56-8249-d19b0c5aa2d6\",\n            \"nombre\": \"Italia\"\n        }\n    ],\n    \"recetas\": [\n        {\n            \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n            \"nombre\": \"Spaghetti alla Carbonara\",\n            \"descripcion\": \"Una clásica receta italiana hecha con huevo, queso, panceta y pimienta negra.\",\n            \"foto\": \"https://example.com/spaghetti-carbonara.jpg\",\n            \"proceso\": \"Cocinar la pasta al dente, mezclar con la panceta cocida, añadir la mezcla de huevo y queso, y servir con pimienta negra.\",\n            \"video\": \"https://example.com/spaghetti-carbonara-video.mp4\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get an invalid cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The culture with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get an invalid cultura",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n   \"statusCode\": 404,\r\n   \"message\": \"The cultura with the given id was not found\"\r\n}"
						}
					]
				},
				{
					"name": "Update a cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Cultura gastronomica Italiana\",\r\n    \"descripcion\": \"Si tratamos de imaginarnos la cultura gastronímica italiana, la mayoría de la gente va a pensar en pasta o pizza, espagueti o salchichas. Pero como la mayoría de las tierras antiguas y con una larga historia, Italia tiene una cocina muy variada.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/culturas/{{culturaId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{culturaId}}"
							]
						}
					},
					"response": [
						{
							"name": "Update a cultura",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Cultura gastronomica Italiana\",\r\n    \"descripcion\": \"Si tratamos de imaginarnos la cultura gastronímica italiana, la mayoría de la gente va a pensar en pasta o pizza, espagueti o salchichas. Pero como la mayoría de las tierras antiguas y con una larga historia, Italia tiene una cocina muy variada.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\": \"0f4b4bd4-609f-4b6c-abda-a2078b70b49d\",\r\n    \"nombre\": \"Cultura gastronomica Italiana\",\r\n    \"descripcion\": \"Si tratamos de imaginarnos la cultura gastronímica italiana, la mayoría de la gente va a pensar en pasta o pizza, espagueti o salchichas. Pero como la mayoría de las tierras antiguas y con una larga historia, Italia tiene una cocina muy variada.\"\r\n}"
						}
					]
				},
				{
					"name": "Update an invalid cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The culture with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Cultura gastronomica Italiana\",\r\n    \"descripcion\": \"Si tratamos de imaginarnos la cultura gastronímica italiana, la mayoría de la gente va a pensar en pasta o pizza, espagueti o salchichas. Pero como la mayoría de las tierras antiguas y con una larga historia, Italia tiene una cocina muy variada.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Update an invalid cultura",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Cultura gastronomica Italiana\",\r\n    \"descripcion\": \"Si tratamos de imaginarnos la cultura gastronímica italiana, la mayoría de la gente va a pensar en pasta o pizza, espagueti o salchichas. Pero como la mayoría de las tierras antiguas y con una larga historia, Italia tiene una cocina muy variada.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The cultura with the given id was not found\"\n}"
						}
					]
				},
				{
					"name": "Delete a cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/{{culturaId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{culturaId}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a cultura",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an invalid cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql('The culture with the given id was not found');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Delete an invalid cultura",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The cultura with the given id was not found\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Categoria",
			"item": [
				{
					"name": "categoria-producto",
					"item": [
						{
							"name": "Add a Categoría",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"pm.globals.set(\"categoriaId\", data.id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Vegetales\",\r\n    \"codigo\": \"123-456-789\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categorias",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categorias"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a Producto",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"pm.globals.set(\"productoId\", data.id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Venus de Milo de Jalea\",\r\n    \"historia\": \"Homero ve este caramelo en la Feria industrial del Dulce y, luego de que Marge tirara accidentalmente sus caramelos al piso, la roba. Al llegar a la casa, la Venus de Milo se pierde entre los demas dulces, pero luego resulta que se había pegado en los pantalones de Ashley Grant, la niñera. La chica piensa que Homero, al sacarla, trató de abusarla sexualmente, pero luego ve que Homero solo quiso el dulce y lo perdona.\",\r\n    \"descripcion\": \"Es la jalea más rara de todas, esculpida por artesanos de jalea, exclusivos del medio de la jalea\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/productos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productos"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a producto to a categoria",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"   pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categoria-producto/{{categoriaId}}/productos/{{productoId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categoria-producto",
										"{{categoriaId}}",
										"productos",
										"{{productoId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add an invalid producto to a categoria",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The product with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categoria-producto/{{categoriaId}}/productos/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categoria-producto",
										"{{categoriaId}}",
										"productos",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a producto to an invalid categoria",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The category with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categoria-producto/00000000-0000-0000-0000-000000000000/productos/{{productoId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categoria-producto",
										"00000000-0000-0000-0000-000000000000",
										"productos",
										"{{productoId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a producto of a categoria",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"   pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categoria-producto/{{categoriaId}}/productos/{{productoId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categoria-producto",
										"{{categoriaId}}",
										"productos",
										"{{productoId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get an invalid producto of a categoria",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The product with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categoria-producto/{{categoriaId}}/productos/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categoria-producto",
										"{{categoriaId}}",
										"productos",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a producto of an invalid categoria",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The category with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categoria-producto/00000000-0000-0000-0000-000000000000/productos/{{productoId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categoria-producto",
										"00000000-0000-0000-0000-000000000000",
										"productos",
										"{{productoId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a Producto 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"pm.globals.set(\"productoId2\", data.id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Venus de Milo de Jalea\",\r\n    \"historia\": \"Homero ve este caramelo en la Feria industrial del Dulce y, luego de que Marge tirara accidentalmente sus caramelos al piso, la roba. Al llegar a la casa, la Venus de Milo se pierde entre los demas dulces, pero luego resulta que se había pegado en los pantalones de Ashley Grant, la niñera. La chica piensa que Homero, al sacarla, trató de abusarla sexualmente, pero luego ve que Homero solo quiso el dulce y lo perdona.\",\r\n    \"descripcion\": \"Es la jalea más rara de todas, esculpida por artesanos de jalea, exclusivos del medio de la jalea\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/productos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productos"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a producto non-associated to a categoria",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 412\", function () {\r",
											"   pm.response.to.have.status(412);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The product with the given id is not associated with the category\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categoria-producto/{{categoriaId}}/productos/{{productoId2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categoria-producto",
										"{{categoriaId}}",
										"productos",
										"{{productoId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all productos of a categoria",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"   pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categoria-producto/{{categoriaId}}/productos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categoria-producto",
										"{{categoriaId}}",
										"productos"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all productos of an invalid categoria",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The category with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categoria-producto/00000000-0000-0000-0000-000000000000/productos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categoria-producto",
										"00000000-0000-0000-0000-000000000000",
										"productos"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update productos of a categoria",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"   pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"nombre\": \"Venus de Milo de Jalea\",\r\n        \"historia\": \"Homero ve este caramelo en la Feria industrial del Dulce y, luego de que Marge tirara accidentalmente sus caramelos al piso, la roba. Al llegar a la casa, la Venus de Milo se pierde entre los demas dulces, pero luego resulta que se había pegado en los pantalones de Ashley Grant, la niñera. La chica piensa que Homero, al sacarla, trató de abusarla sexualmente, pero luego ve que Homero solo quiso el dulce y lo perdona.\",\r\n        \"descripcion\": \"Es la jalea más rara de todas, esculpida por artesanos de jalea, exclusivos del medio de la jalea\"\r\n    },\r\n    {\r\n        \"nombre\": \"Venus de Milo\",\r\n        \"historia\": \"Homero ve este caramelo en la Feria industrial del Dulce y, luego de que Marge tirara accidentalmente sus caramelos al piso, la roba. Al llegar a la casa, la Venus de Milo se pierde entre los demas dulces, pero luego resulta que se había pegado en los pantalones de Ashley Grant, la niñera. La chica piensa que Homero, al sacarla, trató de abusarla sexualmente, pero luego ve que Homero solo quiso el dulce y lo perdona.\",\r\n        \"descripcion\": \"Es la jalea más rara de todas, esculpida por artesanos de jalea, exclusivos del medio de la jalea\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categoria-producto/{{categoriaId}}/productos/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categoria-producto",
										"{{categoriaId}}",
										"productos",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update invalid productos of a categoria",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The product with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n{\r\n    \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n},\r\n{\r\n    \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n}\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categoria-producto/{{categoriaId}}/productos/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categoria-producto",
										"{{categoriaId}}",
										"productos",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update productos of an invalid categoria",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The category with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"nombre\": \"Venus de Milo de Jalea\",\r\n        \"historia\": \"Homero ve este caramelo en la Feria industrial del Dulce y, luego de que Marge tirara accidentalmente sus caramelos al piso, la roba. Al llegar a la casa, la Venus de Milo se pierde entre los demas dulces, pero luego resulta que se había pegado en los pantalones de Ashley Grant, la niñera. La chica piensa que Homero, al sacarla, trató de abusarla sexualmente, pero luego ve que Homero solo quiso el dulce y lo perdona.\",\r\n        \"descripcion\": \"Es la jalea más rara de todas, esculpida por artesanos de jalea, exclusivos del medio de la jalea\"\r\n    },\r\n    {\r\n        \"nombre\": \"Venus de Milo\",\r\n        \"historia\": \"Homero ve este caramelo en la Feria industrial del Dulce y, luego de que Marge tirara accidentalmente sus caramelos al piso, la roba. Al llegar a la casa, la Venus de Milo se pierde entre los demas dulces, pero luego resulta que se había pegado en los pantalones de Ashley Grant, la niñera. La chica piensa que Homero, al sacarla, trató de abusarla sexualmente, pero luego ve que Homero solo quiso el dulce y lo perdona.\",\r\n        \"descripcion\": \"Es la jalea más rara de todas, esculpida por artesanos de jalea, exclusivos del medio de la jalea\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categoria-producto/00000000-0000-0000-0000-000000000000/productos/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categoria-producto",
										"00000000-0000-0000-0000-000000000000",
										"productos",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a producto to a categoria 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"   pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categoria-producto/{{categoriaId}}/productos/{{productoId2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categoria-producto",
										"{{categoriaId}}",
										"productos",
										"{{productoId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a producto of a categoria",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"   pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categoria-producto/{{categoriaId}}/productos/{{productoId2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categoria-producto",
										"{{categoriaId}}",
										"productos",
										"{{productoId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a producto of an invalid categoria",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The category with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categoria-producto/00000000-0000-0000-0000-000000000000/productos/{{productoId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categoria-producto",
										"00000000-0000-0000-0000-000000000000",
										"productos",
										"{{productoId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete an invalid producto of a categoria",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The product with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categoria-producto/{{categoriaId}}/productos/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categoria-producto",
										"{{categoriaId}}",
										"productos",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a producto non-associated to a categoria",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 412\", function () {\r",
											"   pm.response.to.have.status(412);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The product with the given id is not associated with the category\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categoria-producto/{{categoriaId}}/productos/{{productoId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categoria-producto",
										"{{categoriaId}}",
										"productos",
										"{{productoId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Add a Categoría",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"pm.globals.set(\"categoriaId\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Vegetales\",\r\n    \"codigo\": \"123-456-789\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/categorias",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categorias"
							]
						}
					},
					"response": [
						{
							"name": "Add a Categoría",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Vegetales\",\r\n    \"codigo\": \"123-456-789\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categorias",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categorias"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n    \"nombre\": \"Vegetales\",\n    \"codigo\": \"123-456-789\"\n}"
						}
					]
				},
				{
					"name": "Get all Categorías",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of categorias > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/categorias",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categorias"
							]
						}
					},
					"response": [
						{
							"name": "Get all Categorías",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categorias",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categorias"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n     \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n     \"nombre\": \"Vegetales\",\n     \"codigo\": \"123-456-789\"\n    },\n    {\n     \"id\": \"564as13d-23a5-8d9a-2x54z-as65d4a654\",\n     \"nombre\": \"Frutas\",\n     \"codigo\": \"987-654-321\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get one Categoría",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/categorias/{{categoriaId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categorias",
								"{{categoriaId}}"
							]
						}
					},
					"response": [
						{
							"name": "Get one Categoría",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categorias/{{categorias_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categorias",
										"{{categorias_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n    \"nombre\": \"Vegetales\",\n    \"codigo\": \"123-456-789\"\n}"
						}
					]
				},
				{
					"name": "Get an invalid Categoría",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The category with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/categorias/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categorias",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get an invalid Categoría",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categorias/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categorias",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The categoria with the given id was not found\"\n}"
						}
					]
				},
				{
					"name": "Update a Categoría",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Vegetales\",\r\n    \"codigo\": \"123-456-789\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/categorias/{{categoriaId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categorias",
								"{{categoriaId}}"
							]
						}
					},
					"response": [
						{
							"name": "Update a Categoría",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Vegetales\",\r\n    \"codigo\": \"123-456-789\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categorias/{{categorias_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categorias",
										"{{categorias_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n    \"nombre\": \"Vegetales\",\n    \"codigo\": \"123-456-789\"\n}"
						}
					]
				},
				{
					"name": "Update an invalid Categoría",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The category with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Vegetales\",\r\n    \"codigo\": \"123-456-789\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/categorias/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categorias",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Update an invalid Categoría",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Vegetales\",\r\n    \"codigo\": \"123-456-789\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categorias/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categorias",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The categoria with the given id was not found\"\n}"
						}
					]
				},
				{
					"name": "Delete a Categoría",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/categorias/{{categoriaId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categorias",
								"{{categoriaId}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a Categoría",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categorias/{{categorias_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categorias",
										"{{categorias_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an invalid Categoría",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql('The category with the given id was not found');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/categorias/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categorias",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Delete an Invalid Categoría",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categorias/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categorias",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The categoria with the given id was not found\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Producto",
			"item": [
				{
					"name": "Add a Producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"pm.globals.set(\"productoId\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Venus de Milo de Jalea\",\r\n    \"historia\": \"Homero ve este caramelo en la Feria industrial del Dulce y, luego de que Marge tirara accidentalmente sus caramelos al piso, la roba. Al llegar a la casa, la Venus de Milo se pierde entre los demas dulces, pero luego resulta que se había pegado en los pantalones de Ashley Grant, la niñera. La chica piensa que Homero, al sacarla, trató de abusarla sexualmente, pero luego ve que Homero solo quiso el dulce y lo perdona.\",\r\n    \"descripcion\": \"Es la jalea más rara de todas, esculpida por artesanos de jalea, exclusivos del medio de la jalea\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/productos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productos"
							]
						}
					},
					"response": [
						{
							"name": "Add a Producto",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Venus de Milo de Jalea\",\r\n    \"historia\": \"Homero ve este caramelo en la Feria industrial del Dulce y, luego de que Marge tirara accidentalmente sus caramelos al piso, la roba. Al llegar a la casa, la Venus de Milo se pierde entre los demas dulces, pero luego resulta que se había pegado en los pantalones de Ashley Grant, la niñera. La chica piensa que Homero, al sacarla, trató de abusarla sexualmente, pero luego ve que Homero solo quiso el dulce y lo perdona.\",\r\n    \"descripcion\": \"Es la jalea más rara de todas, esculpida por artesanos de jalea, exclusivos del medio de la jalea\",\r\n    \"categoria\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/productos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productos"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n    \"nombre\": \"Venus de Milo de Jalea\",\n    \"historia\": \"Homero ve este caramelo en la Feria industrial del Dulce y, luego de que Marge tirara accidentalmente sus caramelos al piso, la roba. Al llegar a la casa, la Venus de Milo se pierde entre los demas dulces, pero luego resulta que se había pegado en los pantalones de Ashley Grant, la niñera. La chica piensa que Homero, al sacarla, trató de abusarla sexualmente, pero luego ve que Homero solo quiso el dulce y lo perdona.\",\n    \"descripcion\": \"Es la jalea más rara de todas, esculpida por artesanos de jalea, exclusivos del medio de la jalea\",\n    \"categoria\": {\n            \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n            \"nombre\": \"Jaleas\",\n            \"codigo\": \"123-456-789\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get all Producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of productos > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/productos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productos"
							]
						}
					},
					"response": [
						{
							"name": "Get all Productos",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/productos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productos"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n    \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n    \"nombre\": \"Venus de Milo de Jalea\",\n    \"historia\": \"Homero ve este caramelo en la Feria industrial del Dulce y, luego de que Marge tirara accidentalmente sus caramelos al piso, la roba. Al llegar a la casa, la Venus de Milo se pierde entre los demas dulces, pero luego resulta que se había pegado en los pantalones de Ashley Grant, la niñera. La chica piensa que Homero, al sacarla, trató de abusarla sexualmente, pero luego ve que Homero solo quiso el dulce y lo perdona.\",\n    \"descripcion\": \"Es la jalea más rara de todas, esculpida por artesanos de jalea, exclusivos del medio de la jalea\",\n    \"categoria\": {\n            \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n            \"nombre\": \"Jaleas\",\n            \"codigo\": \"123-456-789\"\n        }\n    },\n    {\n    \"id\": \"987a984s-x546-8sa9-87qsx-h654fg8gf79\",\n    \"nombre\": \"Leche\",\n    \"historia\": \"El consumo humano de la leche de origen animal comenzó hace unos once mil años con la domesticación del ganado durante el llamado óptimo climático. Este proceso se dio en especial en Oriente Medio, impulsando la revolución neolítica.\",\n    \"descripcion\": \"La leche (del latín: lac) es una secreción nutritiva de color blanquecino opaco producida por las células secretoras de las glándulas mamarias de los mamíferos, incluidos los monotremas.\",\n    \"categoria\": {\n            \"id\": \"as65d4-xc98789-fghjk624-dfgh6j-1r6s5t4fr\",\n            \"nombre\": \"Lácteos\",\n            \"codigo\": \"654-123-987\"\n        }\n    }\n    }\n]"
						}
					]
				},
				{
					"name": "Get one Producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/productos/{{productoId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productos",
								"{{productoId}}"
							]
						}
					},
					"response": [
						{
							"name": "Get one Producto",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/productos/{{productos_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productos",
										"{{productos_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n    \"nombre\": \"Venus de Milo de Jalea\",\n    \"historia\": \"Homero ve este caramelo en la Feria industrial del Dulce y, luego de que Marge tirara accidentalmente sus caramelos al piso, la roba. Al llegar a la casa, la Venus de Milo se pierde entre los demas dulces, pero luego resulta que se había pegado en los pantalones de Ashley Grant, la niñera. La chica piensa que Homero, al sacarla, trató de abusarla sexualmente, pero luego ve que Homero solo quiso el dulce y lo perdona.\",\n    \"descripcion\": \"Es la jalea más rara de todas, esculpida por artesanos de jalea, exclusivos del medio de la jalea\",\n    \"categoria\": {\n            \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n            \"nombre\": \"Jaleas\",\n            \"codigo\": \"123-456-789\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get an invalid Producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The product with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/productos/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productos",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get an invalid Producto",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/productos/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productos",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The producto with the given id was not found\"\n}"
						}
					]
				},
				{
					"name": "Update a Producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Venus de Milo de Jalea\",\r\n    \"historia\": \"Homero ve este caramelo en la Feria industrial del Dulce y, luego de que Marge tirara accidentalmente sus caramelos al piso, la roba. Al llegar a la casa, la Venus de Milo se pierde entre los demas dulces, pero luego resulta que se había pegado en los pantalones de Ashley Grant, la niñera. La chica piensa que Homero, al sacarla, trató de abusarla sexualmente, pero luego ve que Homero solo quiso el dulce y lo perdona.\",\r\n    \"descripcion\": \"Es la jalea más rara de todas, esculpida por artesanos de jalea, exclusivos del medio de la jalea\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/productos/{{productoId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productos",
								"{{productoId}}"
							]
						}
					},
					"response": [
						{
							"name": "Update a Producto",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Venus de Milo de Jalea\",\r\n    \"historia\": \"Homero ve este caramelo en la Feria industrial del Dulce y, luego de que Marge tirara accidentalmente sus caramelos al piso, la roba. Al llegar a la casa, la Venus de Milo se pierde entre los demas dulces, pero luego resulta que se había pegado en los pantalones de Ashley Grant, la niñera. La chica piensa que Homero, al sacarla, trató de abusarla sexualmente, pero luego ve que Homero solo quiso el dulce y lo perdona.\",\r\n    \"descripcion\": \"Es la jalea más rara de todas, esculpida por artesanos de jalea, exclusivos del medio de la jalea\",\r\n    \"categoria\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/productos/{{productos_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productos",
										"{{productos_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n    \"nombre\": \"Venus de Milo de Jalea\",\n    \"historia\": \"Homero ve este caramelo en la Feria industrial del Dulce y, luego de que Marge tirara accidentalmente sus caramelos al piso, la roba. Al llegar a la casa, la Venus de Milo se pierde entre los demas dulces, pero luego resulta que se había pegado en los pantalones de Ashley Grant, la niñera. La chica piensa que Homero, al sacarla, trató de abusarla sexualmente, pero luego ve que Homero solo quiso el dulce y lo perdona.\",\n    \"descripcion\": \"Es la jalea más rara de todas, esculpida por artesanos de jalea, exclusivos del medio de la jalea\",\n    \"categoria\": {\n            \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n            \"nombre\": \"Jaleas\",\n            \"codigo\": \"123-456-789\"\n        }\n}"
						}
					]
				},
				{
					"name": "Update an invalid Producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The product with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Venus de Milo de Jalea\",\r\n    \"historia\": \"Homero ve este caramelo en la Feria industrial del Dulce y, luego de que Marge tirara accidentalmente sus caramelos al piso, la roba. Al llegar a la casa, la Venus de Milo se pierde entre los demas dulces, pero luego resulta que se había pegado en los pantalones de Ashley Grant, la niñera. La chica piensa que Homero, al sacarla, trató de abusarla sexualmente, pero luego ve que Homero solo quiso el dulce y lo perdona.\",\r\n    \"descripcion\": \"Es la jalea más rara de todas, esculpida por artesanos de jalea, exclusivos del medio de la jalea\",\r\n    \"categoria\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/productos/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productos",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Update an invalid Producto",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Venus de Milo de Jalea\",\r\n    \"historia\": \"Homero ve este caramelo en la Feria industrial del Dulce y, luego de que Marge tirara accidentalmente sus caramelos al piso, la roba. Al llegar a la casa, la Venus de Milo se pierde entre los demas dulces, pero luego resulta que se había pegado en los pantalones de Ashley Grant, la niñera. La chica piensa que Homero, al sacarla, trató de abusarla sexualmente, pero luego ve que Homero solo quiso el dulce y lo perdona.\",\r\n    \"descripcion\": \"Es la jalea más rara de todas, esculpida por artesanos de jalea, exclusivos del medio de la jalea\",\r\n    \"categoria\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/productos/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productos",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The producto with the given id was not found\"\n}"
						}
					]
				},
				{
					"name": "Delete a Producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/productos/{{productoId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productos",
								"{{productoId}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a Producto",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/productos/{{productos_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productos",
										"{{productos_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an invalid Producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql('The product with the given id was not found');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/productos/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productos",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Delete an Invalid Producto",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/productos/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productos",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The producto with the given id was not found\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Receta",
			"item": [
				{
					"name": "Add a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"pm.globals.set(\"recetaId\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Spaghetti alla Carbonara\",\r\n    \"descripcion\": \"Una clásica receta italiana hecha con huevo, queso, panceta y pimienta negra.\",\r\n    \"foto\": \"https://example.com/spaghetti-carbonara.jpg\",\r\n    \"proceso\": \"Cocinar la pasta al dente, mezclar con la panceta cocida, añadir la mezcla de huevo y queso, y servir con pimienta negra.\",\r\n    \"video\": \"https://example.com/spaghetti-carbonara-video.mp4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/receta",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receta"
							]
						}
					},
					"response": [
						{
							"name": "Add a receta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Spaghetti alla Carbonara\",\r\n    \"descripcion\": \"Una clásica receta italiana hecha con huevo, queso, panceta y pimienta negra.\",\r\n    \"foto\": \"https://example.com/spaghetti-carbonara.jpg\",\r\n    \"proceso\": \"Cocinar la pasta al dente, mezclar con la panceta cocida, añadir la mezcla de huevo y queso, y servir con pimienta negra.\",\r\n    \"video\": \"https://example.com/spaghetti-carbonara-video.mp4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recetas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recetas"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n    \"nombre\": \"Spaghetti alla Carbonara\",\n    \"descripcion\": \"Una clásica receta italiana hecha con huevo, queso, panceta y pimienta negra.\",\n    \"foto\": \"https://example.com/spaghetti-carbonara.jpg\",\n    \"proceso\": \"Cocinar la pasta al dente, mezclar con la panceta cocida, añadir la mezcla de huevo y queso, y servir con pimienta negra.\",\n    \"video\": \"https://example.com/spaghetti-carbonara-video.mp4\"\n}"
						}
					]
				},
				{
					"name": "Get all recetas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of recetas > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/receta",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receta"
							]
						}
					},
					"response": [
						{
							"name": "Get all recetas",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recetas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recetas"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n        \"nombre\": \"Spaghetti alla Carbonara\",\n        \"descripcion\": \"Una clásica receta italiana hecha con huevo, queso, panceta y pimienta negra.\",\n        \"foto\": \"https://example.com/spaghetti-carbonara.jpg\",\n        \"proceso\": \"Cocinar la pasta al dente, mezclar con la panceta cocida, añadir la mezcla de huevo y queso, y servir con pimienta negra.\",\n        \"video\": \"https://example.com/spaghetti-carbonara-video.mp4\"\n    },\n    {\n        \"id\": \"4f8e9c75-d417-4b2c-9e3a-1e3c85f0d1b5\",\n        \"nombre\": \"Penne all'Arrabbiata\",\n        \"descripcion\": \"Un plato picante de pasta italiana preparado con salsa de tomate, ajo, y pimientos rojos.\",\n        \"foto\": \"https://example.com/penne-arrabbiata.jpg\",\n        \"proceso\": \"Cocinar la pasta al dente, preparar la salsa con ajo y pimientos rojos en aceite, agregar tomate, mezclar con la pasta y servir.\",\n        \"video\": \"https://example.com/penne-arrabbiata-video.mp4\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get one receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/receta/{{recetaId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receta",
								"{{recetaId}}"
							]
						}
					},
					"response": [
						{
							"name": "Get one receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recetas/{{receta_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n    \"nombre\": \"Spaghetti alla Carbonara\",\n    \"descripcion\": \"Una clásica receta italiana hecha con huevo, queso, panceta y pimienta negra.\",\n    \"foto\": \"https://example.com/spaghetti-carbonara.jpg\",\n    \"proceso\": \"Cocinar la pasta al dente, mezclar con la panceta cocida, añadir la mezcla de huevo y queso, y servir con pimienta negra.\",\n    \"video\": \"https://example.com/spaghetti-carbonara-video.mp4\"\n}"
						}
					]
				},
				{
					"name": "Get an invalid receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The recipe with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/receta/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receta",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get an invalid receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recetas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recetas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The receta with the given id was not found\"\n}"
						}
					]
				},
				{
					"name": "Update a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Spaghetti alla Carbonara\",\r\n    \"descripcion\": \"Una clásica receta italiana hecha con huevo, queso, panceta y pimienta negra.\",\r\n    \"foto\": \"https://example.com/spaghetti-carbonara.jpg\",\r\n    \"proceso\": \"Cocinar la pasta al dente, mezclar con la panceta cocida, añadir la mezcla de huevo y queso.\",\r\n    \"video\": \"https://example.com/spaghetti-carbonara-video.mp4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/receta/{{recetaId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receta",
								"{{recetaId}}"
							]
						}
					},
					"response": [
						{
							"name": "Update a receta",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Spaghetti alla Carbonara\",\r\n    \"descripcion\": \"Una clásica receta italiana hecha con huevo, queso, panceta y pimienta negra.\",\r\n    \"foto\": \"https://example.com/spaghetti-carbonara.jpg\",\r\n    \"proceso\": \"Cocinar la pasta al dente, mezclar con la panceta cocida, añadir la mezcla de huevo y queso.\",\r\n    \"video\": \"https://example.com/spaghetti-carbonara-video.mp4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recetas/{{receta_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"2c6ed051-c111-4e4d-8eaa-0dda985efa1c\",\n    \"nombre\": \"Spaghetti alla Carbonara\",\n    \"descripcion\": \"Una clásica receta italiana hecha con huevo, queso, panceta y pimienta negra.\",\n    \"foto\": \"https://example.com/spaghetti-carbonara.jpg\",\n    \"proceso\": \"Cocinar la pasta al dente, mezclar con la panceta cocida, añadir la mezcla de huevo y queso.\",\n    \"video\": \"https://example.com/spaghetti-carbonara-video.mp4\"\n}"
						}
					]
				},
				{
					"name": "Update an invalid receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The recipe with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Spaghetti alla Carbonara\",\r\n    \"descripcion\": \"Una clásica receta italiana hecha con huevo, queso, panceta y pimienta negra.\",\r\n    \"foto\": \"https://example.com/spaghetti-carbonara.jpg\",\r\n    \"proceso\": \"Cocinar la pasta al dente, mezclar con la panceta cocida, añadir la mezcla de huevo y queso.\",\r\n    \"video\": \"https://example.com/spaghetti-carbonara-video.mp4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/receta/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receta",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Update an invalid receta",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Spaghetti alla Carbonara\",\r\n    \"descripcion\": \"Una clásica receta italiana hecha con huevo, queso, panceta y pimienta negra.\",\r\n    \"foto\": \"https://example.com/spaghetti-carbonara.jpg\",\r\n    \"proceso\": \"Cocinar la pasta al dente, mezclar con la panceta cocida, añadir la mezcla de huevo y queso.\",\r\n    \"video\": \"https://example.com/spaghetti-carbonara-video.mp4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recetas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recetas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The receta with the given id was not found\"\n}"
						}
					]
				},
				{
					"name": "Delete a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/receta/{{recetaId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receta",
								"{{recetaId}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a receta",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recetas/{{receta_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an invalid receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql('The recipe with the given id was not found');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/receta/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receta",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "{     \"statusCode\": 404,     \"message\": \"The cultura with the given id was not found\" }",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recetas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recetas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The receta with the given id was not found\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Restaurante",
			"item": [
				{
					"name": "Add a Restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"pm.globals.set(\"restauranteId\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Le Cinq\",\r\n    \"estrellasMichelin\": \"3\",\r\n    \"fechaConsecucion\": \"2016-02-01\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurante",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurante"
							]
						}
					},
					"response": [
						{
							"name": "Add a Restaurante",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"nombre\": \"Le Cinq\",\n    \"estrellasMichelin\": \"3\",\n    \"fechaConsecucion\": \"2016-02-01\",\n    \"ciudad\": \"Paris\",\n    \"culturaGastronomica\": \"Cultura gastronómica francesa\"\n}"
						}
					]
				},
				{
					"name": "Get all Restaurantes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of restaurantes > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurante",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurante"
							]
						}
					},
					"response": [
						{
							"name": "Get all Restaurantes",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n        \"nombre\": \"Le Cinq\",\n        \"estrellasMichelin\": \"3\",\n        \"fechaConsecucion\": \"2016-02-01\",\n        \"ciudad\": \"Paris\",\n        \"culturaGastronomica\": \"Cultura gastronómica francesa\"\n    },\n    {\n        \"id\": \"789e4567-e89b-12d3-a456-426614174111\",\n        \"nombre\": \"El Celler de Can Roca\",\n        \"estrellasMichelin\": \"3\",\n        \"fechaConsecucion\": \"2015-01-01\",\n        \"ciudad\": \"Girona\",\n        \"culturaGastronomica\": \"Cultura gastronómica española\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get one Restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurante/{{restauranteId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurante",
								"{{restauranteId}}"
							]
						}
					},
					"response": [
						{
							"name": "Get one Restaurante",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"nombre\": \"Le Cinq\",\n    \"estrellasMichelin\": \"3\",\n    \"fechaConsecucion\": \"2016-02-01\",\n    \"ciudad\": \"Paris\",\n    \"culturaGastronomica\": \"Cultura gastronómica francesa\"\n}"
						}
					]
				},
				{
					"name": "Get an invalid Restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The restaurant with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurante/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurante",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get an invalid Restaurante",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The restaurant with the given id was not found\"\n}"
						}
					]
				},
				{
					"name": "Update a Restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Le Cinq (Updated)\",\r\n    \"estrellasMichelin\": \"3\",\r\n    \"fechaConsecucion\": \"2016-02-01\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurante/{{restauranteId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurante",
								"{{restauranteId}}"
							]
						}
					},
					"response": [
						{
							"name": "Update a Restaurante",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/:restaurant_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										":restaurant_id"
									],
									"variable": [
										{
											"key": "restaurant_id",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\r\n    \"nombre\": \"Le Cinq (Updated)\",\r\n    \"estrellasMichelin\": \"3\",\r\n    \"fechaConsecucion\": \"2016-02-01\",\r\n    \"ciudad\": \"Paris\",\r\n    \"culturaGastronomica\": \"Cultura gastronómica francesa\"\r\n}\r\n"
						}
					]
				},
				{
					"name": "Update an invalid Restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The restaurant with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Le Cinq (Updated)\",\r\n    \"estrellasMichelin\": \"3\",\r\n    \"fechaConsecucion\": \"2016-02-01\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurante/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurante",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Update an invalid Restaurante",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Le Cinq (Updated)\",\r\n    \"estrellasMichelin\": \"3\",\r\n    \"fechaConsecucion\": \"2016-02-01\",\r\n    \"ciudad\": \"Paris\",\r\n    \"culturaGastronomica\": \"Cultura gastronómica francesa\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"The restaurant with the given id was not found\"\r\n}"
						}
					]
				},
				{
					"name": "Delete a Restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurante/{{restauranteId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurante",
								"{{restauranteId}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a Restaurante",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/:restaurant_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										":restaurant_id"
									],
									"variable": [
										{
											"key": "restaurant_id",
											"value": ""
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an invalid Restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql('The restaurant with the given id was not found');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurante/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurante",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Delete an invalid Restaurante",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"The restaurant with the given id was not found\"\r\n}"
						}
					]
				}
			]
		},
		{
			"name": "País",
			"item": [
				{
					"name": "pais-ciudad",
					"item": [
						{
							"name": "Add a ciudad",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();",
											"pm.globals.set(\"ciudadId\", data.id);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nombre\": \"Medellín\",\n    \"codigo\":\"MED\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ciudades",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudades"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a país",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();",
											"pm.globals.set(\"paisId\", data.id);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nombre\": \"Colombia\",\n    \"alpha2\":\"CO\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paises",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paises"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a ciudad to a pais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"   pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pais-ciudad/{{paisId}}/ciudades/{{ciudadId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pais-ciudad",
										"{{paisId}}",
										"ciudades",
										"{{ciudadId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add an invalid ciudad to a pais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The city with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pais-ciudad/{{paisId}}/ciudades/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pais-ciudad",
										"{{paisId}}",
										"ciudades",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a ciudad to an invalid pais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The country with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pais-ciudad/00000000-0000-0000-0000-000000000000/ciudades/{{ciudadId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pais-ciudad",
										"00000000-0000-0000-0000-000000000000",
										"ciudades",
										"{{ciudadId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a ciudad of a pais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"   pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pais-ciudad/{{paisId}}/ciudades/{{ciudadId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pais-ciudad",
										"{{paisId}}",
										"ciudades",
										"{{ciudadId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get an invalid ciudad of a pais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The city with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pais-ciudad/{{paisId}}/ciudades/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pais-ciudad",
										"{{paisId}}",
										"ciudades",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a ciudad of an invalid pais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The city with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pais-ciudad/00000000-0000-0000-0000-000000000000/ciudades/{{id_ciudad}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pais-ciudad",
										"00000000-0000-0000-0000-000000000000",
										"ciudades",
										"{{id_ciudad}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a ciudad 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();",
											"pm.globals.set(\"ciudadId2\", data.id);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nombre\": \"Medellín\",\n    \"codigo\":\"MED\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ciudades",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudades"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a ciudad non-associated to a pais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 412\", function () {\r",
											"   pm.response.to.have.status(412);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The city with the given id is not associated with the country\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pais-ciudad/{{paisId}}/ciudades/{{ciudadId2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pais-ciudad",
										"{{paisId}}",
										"ciudades",
										"{{ciudadId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all ciudades of a pais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"   pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pais-ciudad/{{paisId}}/ciudades/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pais-ciudad",
										"{{paisId}}",
										"ciudades",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all ciudades of an invalid pais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql( \"The country with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pais-ciudad/00000000-0000-0000-0000-000000000000/ciudades/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pais-ciudad",
										"00000000-0000-0000-0000-000000000000",
										"ciudades",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update ciudad of a pais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"   pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"nombre\": \"Medellín\",\r\n        \"codigo\": \"MED\"\r\n    },\r\n    {\r\n        \"nombre\": \"Bogotá\",\r\n        \"codigo\": \"BOG\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pais-ciudad/{{paisId}}/ciudades/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pais-ciudad",
										"{{paisId}}",
										"ciudades",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update invalid ciudades of a pais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The city with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n    },\r\n    {\r\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pais-ciudad/{{paisId}}/ciudades/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pais-ciudad",
										"{{paisId}}",
										"ciudades",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update ciudades of an invalid pais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The country with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"nombre\": \"Medellín\",\r\n        \"codigo\": \"MED\"\r\n    },\r\n    {\r\n        \"nombre\": \"Bogotá\",\r\n        \"codigo\": \"BOG\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pais-ciudad/00000000-0000-0000-0000-000000000000/ciudades/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pais-ciudad",
										"00000000-0000-0000-0000-000000000000",
										"ciudades",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a ciudad to a pais 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"   pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pais-ciudad/{{paisId}}/ciudades/{{ciudadId2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pais-ciudad",
										"{{paisId}}",
										"ciudades",
										"{{ciudadId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a ciudad of a pais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"   pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pais-ciudad/{{paisId}}/ciudades/{{ciudadId2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pais-ciudad",
										"{{paisId}}",
										"ciudades",
										"{{ciudadId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a ciudad of an invalid pais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The country with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pais-ciudad/00000000-0000-0000-0000-000000000000/ciudades/{{ciudadId2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pais-ciudad",
										"00000000-0000-0000-0000-000000000000",
										"ciudades",
										"{{ciudadId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete an invalid ciudad of a pais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The city with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pais-ciudad/{{paisId}}/ciudades/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pais-ciudad",
										"{{paisId}}",
										"ciudades",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a ciudad non-associated to a pais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 412\", function () {\r",
											"   pm.response.to.have.status(412);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The city with the given id is not associated with the country\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pais-ciudad/{{paisId}}/ciudades/{{ciudadId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pais-ciudad",
										"{{paisId}}",
										"ciudades",
										"{{ciudadId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Add a país",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.globals.set(\"paisId\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Colombia\",\n    \"alpha2\":\"CO\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/paises",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"paises"
							]
						}
					},
					"response": [
						{
							"name": "Add a país",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nombre\": \"Colombia\",\n    \"alpha2\":\"CO\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paises",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paises"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"nombre\": \"Colombia\",\n    \"alpha2\": \"CO\"\n}"
						}
					]
				},
				{
					"name": "Get all países",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of paises > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/paises",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"paises"
							]
						}
					},
					"response": [
						{
							"name": "Get all países",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/paises",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paises"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n        \"nombre\": \"Colombia\",\n        \"alpha2\": \"CO\",\n        \"ciudades\": [\n            {\n                \"id\": 1,\n                \"nombre\": \"Bogotá\",\n                \"codigo\": \"BOG\"\n            },\n            {\n                \"id\": 2,\n                \"nombre\": \"Medellín\",\n                \"codigo\": \"MED\"\n            },\n            {\n                \"id\": 3,\n                \"nombre\": \"Cali\",\n                \"codigo\": \"CLO\"\n            },\n            {\n                \"id\": 4,\n                \"nombre\": \"Barranquilla\",\n                \"codigo\": \"BAQ\"\n            },\n            {\n                \"id\": 5,\n                \"nombre\": \"Cartagena\",\n                \"codigo\": \"CTG\"\n            },\n            {\n                \"id\": 6,\n                \"nombre\": \"Bucaramanga\",\n                \"codigo\": \"BGA\"\n            },\n            {\n                \"id\": 7,\n                \"nombre\": \"Pereira\",\n                \"codigo\": \"PEI\"\n            },\n            {\n                \"id\": 8,\n                \"nombre\": \"Manizales\",\n                \"codigo\": \"MZL\"\n            },\n            {\n                \"id\": 9,\n                \"nombre\": \"Santa Marta\",\n                \"codigo\": \"SMR\"\n            },\n            {\n                \"id\": 10,\n                \"nombre\": \"Cúcuta\",\n                \"codigo\": \"CUC\"\n            }\n        ],\n        \"culturas\": [\n            {\n                \"id\": \"1a2b3c4d-5678-9101-1121-314151617181\",\n                \"nombre\": \"Cultura gastronómica Antioqueña\",\n                \"descripcion\": \"La cultura gastronómica antioqueña se destaca por su cocina abundante y rica en calorías, con platos emblemáticos como la bandeja paisa, que incluye frijoles, arroz, carne molida, chicharrón, huevo frito, y arepa. La comida antioqueña refleja las raíces campesinas y el amor por los ingredientes locales como el maíz y el fríjol.\"\n            },\n            {\n                \"id\": \"2e3f4g5h-6789-1011-1213-141516171819\",\n                \"nombre\": \"Cultura gastronómica Costeña\",\n                \"descripcion\": \"La cultura gastronómica de la Costa Caribe colombiana está marcada por la influencia africana y caribeña, con platos característicos como el sancocho de pescado, el arroz con coco, y las arepas de huevo. Los mariscos y el plátano son ingredientes fundamentales en esta región.\"\n            },\n            {\n                \"id\": \"3h4i5j6k-7891-0112-1314-151617181920\",\n                \"nombre\": \"Cultura gastronómica Valluna\",\n                \"descripcion\": \"La gastronomía del Valle del Cauca es conocida por su sazón única y la diversidad de sus platos, que incluyen el famoso sancocho de gallina, el arroz atollado, y las empanadas vallunas. El uso de ingredientes frescos y el contraste de sabores dulces y salados son distintivos de esta región.\"\n            },\n            {\n                \"id\": \"4j5k6l7m-8910-1121-3141-516171819202\",\n                \"nombre\": \"Cultura gastronómica Santandereana\",\n                \"descripcion\": \"La cultura gastronómica de Santander se caracteriza por platos como la pepitoria, la hormiga culona, y el mute. Es una cocina que conserva tradiciones indígenas y campesinas, utilizando ingredientes como el maíz, la yuca, y el cabro.\"\n            },\n            {\n                \"id\": \"5k6l7m8n-9101-1213-1415-161718192021\",\n                \"nombre\": \"Cultura gastronómica Cundiboyacense\",\n                \"descripcion\": \"La gastronomía cundiboyacense incluye platos emblemáticos como la fritanga, el ajiaco santafereño, y los postres como la cuajada con melao. Es una cocina que refleja la mezcla de tradiciones indígenas con influencias españolas, utilizando ingredientes como la papa, el maíz, y el pollo.\"\n            }\n        ]\n    },\n    {\n        \"id\": \"5c2a4b50-1276-11ed-861d-0242ac120003\",\n        \"nombre\": \"México\",\n        \"alpha2\": \"MX\",\n        \"ciudades\": [\n            {\n                \"id\": 1,\n                \"nombre\": \"Ciudad de México\",\n                \"codigo\": \"CDMX\"\n            },\n            {\n                \"id\": 2,\n                \"nombre\": \"Guadalajara\",\n                \"codigo\": \"GDL\"\n            },\n            {\n                \"id\": 3,\n                \"nombre\": \"Monterrey\",\n                \"codigo\": \"MTY\"\n            },\n            {\n                \"id\": 4,\n                \"nombre\": \"Cancún\",\n                \"codigo\": \"CUN\"\n            },\n            {\n                \"id\": 5,\n                \"nombre\": \"Puebla\",\n                \"codigo\": \"PBC\"\n            }\n        ],\n        \"culturas\": [\n            {\n                \"id\": \"6d7e8f9a-5678-9101-1121-314151617182\",\n                \"nombre\": \"Cultura gastronómica Yucateca\",\n                \"descripcion\": \"La gastronomía yucateca tiene una fuerte influencia maya, con platos tradicionales como la cochinita pibil, los panuchos, y el relleno negro. El uso de achiote, naranja agria y otras especias locales es característico de esta región.\"\n            },\n            {\n                \"id\": \"7f8g9h1j-6789-1011-1213-141516171820\",\n                \"nombre\": \"Cultura gastronómica Oaxaqueña\",\n                \"descripcion\": \"La cocina oaxaqueña es famosa por su gran variedad de moles, el uso de maíz en diferentes preparaciones y los chapulines. Los ingredientes autóctonos y la herencia zapoteca se reflejan en los sabores únicos de esta región.\"\n            },\n            {\n                \"id\": \"8g9h1j2k-7891-0112-1314-151617181921\",\n                \"nombre\": \"Cultura gastronómica Poblana\",\n                \"descripcion\": \"La cocina poblana es una mezcla de influencias indígenas, españolas y árabes, destacándose por platos como el mole poblano, los chiles en nogada, y las cemitas. Es una cocina que combina lo dulce con lo salado de una manera única.\"\n            }\n        ]\n    },\n    {\n        \"id\": \"7f8g9h1j-1276-11ed-861d-0242ac120004\",\n        \"nombre\": \"Italia\",\n        \"alpha2\": \"IT\",\n        \"ciudades\": [\n            {\n                \"id\": 1,\n                \"nombre\": \"Roma\",\n                \"codigo\": \"ROM\"\n            },\n            {\n                \"id\": 2,\n                \"nombre\": \"Milán\",\n                \"codigo\": \"MIL\"\n            },\n            {\n                \"id\": 3,\n                \"nombre\": \"Florencia\",\n                \"codigo\": \"FLR\"\n            },\n            {\n                \"id\": 4,\n                \"nombre\": \"Venecia\",\n                \"codigo\": \"VCE\"\n            },\n            {\n                \"id\": 5,\n                \"nombre\": \"Nápoles\",\n                \"codigo\": \"NAP\"\n            }\n        ],\n        \"culturas\": [\n            {\n                \"id\": \"9h1j2k3l-5678-9101-1121-314151617183\",\n                \"nombre\": \"Cultura gastronómica Italiana\",\n                \"descripcion\": \"La gastronomía italiana es mundialmente conocida por sus pastas, pizzas y vinos. Sin embargo, las variaciones regionales son notables, desde la cocina rica y pesada del norte con risottos y carnes, hasta la ligera y basada en mariscos del sur.\"\n            },\n            {\n                \"id\": \"1j2k3l4m-6789-1011-1213-141516171822\",\n                \"nombre\": \"Cultura gastronómica Siciliana\",\n                \"descripcion\": \"La gastronomía siciliana es un reflejo de la historia multicultural de la isla, con influencias árabes, españolas y griegas. Destacan los arancini, la pasta alla Norma y los cannoli. Es una cocina rica en sabores mediterráneos.\"\n            },\n            {\n                \"id\": \"2k3l4m5n-7891-0112-1314-151617181923\",\n                \"nombre\": \"Cultura gastronómica Toscana\",\n                \"descripcion\": \"La cocina toscana es conocida por su simplicidad y uso de ingredientes frescos, como el aceite de oliva, el pan sin sal y los embutidos. Platos como la ribollita y la bistecca alla fiorentina son ejemplos de la tradición culinaria de esta región.\"\n            }\n        ]\n    },\n    {\n        \"id\": \"8g9h1j2k-1276-11ed-861d-0242ac120005\",\n        \"nombre\": \"Japón\",\n        \"alpha2\": \"JP\",\n        \"ciudades\": [\n            {\n                \"id\": 1,\n                \"nombre\": \"Tokio\",\n                \"codigo\": \"TYO\"\n            },\n            {\n                \"id\": 2,\n                \"nombre\": \"Osaka\",\n                \"codigo\": \"OSA\"\n            },\n            {\n                \"id\": 3,\n                \"nombre\": \"Kioto\",\n                \"codigo\": \"KYO\"\n            },\n            {\n                \"id\": 4,\n                \"nombre\": \"Nagoya\",\n                \"codigo\": \"NGO\"\n            },\n            {\n                \"id\": 5,\n                \"nombre\": \"Sapporo\",\n                \"codigo\": \"SPK\"\n            }\n        ],\n        \"culturas\": [\n            {\n                \"id\": \"3l4m5n6o-5678-9101-1121-314151617184\",\n                \"nombre\": \"Cultura gastronómica Japonesa\",\n                \"descripcion\": \"La gastronomía japonesa se basa en la simplicidad y la pureza de los ingredientes, destacándose el sushi, el ramen, y el tempura. El umami es un sabor clave en la cocina japonesa, y el arroz es un componente esencial de la mayoría de las comidas.\"\n            },\n            {\n                \"id\": \"4m5n6o7p-6789-1011-1213-141516171824\",\n                \"nombre\": \"Cultura gastronómica Kansai\",\n                \"descripcion\": \"La región de Kansai es famosa por sus platos distintivos como el okonomiyaki y el takoyaki. La cocina aquí es más dulce y más rica en salsas que en otras partes de Japón, reflejando la cultura vibrante de ciudades como Osaka y Kioto.\"\n            },\n            {\n                \"id\": \"5n6o7p8q-7891-0112-1314-151617181925\",\n                \"nombre\": \"Cultura gastronómica Hokkaido\",\n                \"descripcion\": \"Hokkaido es conocido por sus productos frescos, como mariscos, lácteos y vegetales. Platos como el sopa de curry, el ramen de miso y el jingisukan (barbacoa de cordero) son emblemáticos de esta región.\"\n            }\n        ]\n    }\n]\n"
						}
					]
				},
				{
					"name": "Get one país",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/paises/{{paisId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"paises",
								"{{paisId}}"
							]
						}
					},
					"response": [
						{
							"name": "Get one país",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/paises/{{alpha2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paises",
										"{{alpha2}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"nombre\": \"Colombia\",\n    \"alpha2\": \"CO\",\n    \"ciudades\": [\n        {\n            \"id\": 1,\n            \"nombre\": \"Bogotá\",\n            \"codigo\": \"BOG\"\n        },\n        {\n            \"id\": 2,\n            \"nombre\": \"Medellín\",\n            \"codigo\": \"MED\"\n        },\n        {\n            \"id\": 3,\n            \"nombre\": \"Cali\",\n            \"codigo\": \"CLO\"\n        },\n        {\n            \"id\": 4,\n            \"nombre\": \"Barranquilla\",\n            \"codigo\": \"BAQ\"\n        },\n        {\n            \"id\": 5,\n            \"nombre\": \"Cartagena\",\n            \"codigo\": \"CTG\"\n        },\n        {\n            \"id\": 6,\n            \"nombre\": \"Bucaramanga\",\n            \"codigo\": \"BGA\"\n        },\n        {\n            \"id\": 7,\n            \"nombre\": \"Pereira\",\n            \"codigo\": \"PEI\"\n        },\n        {\n            \"id\": 8,\n            \"nombre\": \"Manizales\",\n            \"codigo\": \"MZL\"\n        },\n        {\n            \"id\": 9,\n            \"nombre\": \"Santa Marta\",\n            \"codigo\": \"SMR\"\n        },\n        {\n            \"id\": 10,\n            \"nombre\": \"Cúcuta\",\n            \"codigo\": \"CUC\"\n        }\n    ],\n    \"culturas\": [\n        {\n            \"id\": \"1a2b3c4d-5678-9101-1121-314151617181\",\n            \"nombre\": \"Cultura gastronómica Antioqueña\",\n            \"descripcion\": \"La cultura gastronómica antioqueña se destaca por su cocina abundante y rica en calorías, con platos emblemáticos como la bandeja paisa, que incluye frijoles, arroz, carne molida, chicharrón, huevo frito, y arepa. La comida antioqueña refleja las raíces campesinas y el amor por los ingredientes locales como el maíz y el fríjol.\"\n        },\n        {\n            \"id\": \"2e3f4g5h-6789-1011-1213-141516171819\",\n            \"nombre\": \"Cultura gastronómica Costeña\",\n            \"descripcion\": \"La cultura gastronómica de la Costa Caribe colombiana está marcada por la influencia africana y caribeña, con platos característicos como el sancocho de pescado, el arroz con coco, y las arepas de huevo. Los mariscos y el plátano son ingredientes fundamentales en esta región.\"\n        },\n        {\n            \"id\": \"3h4i5j6k-7891-0112-1314-151617181920\",\n            \"nombre\": \"Cultura gastronómica Valluna\",\n            \"descripcion\": \"La gastronomía del Valle del Cauca es conocida por su sazón única y la diversidad de sus platos, que incluyen el famoso sancocho de gallina, el arroz atollado, y las empanadas vallunas. El uso de ingredientes frescos y el contraste de sabores dulces y salados son distintivos de esta región.\"\n        },\n        {\n            \"id\": \"4j5k6l7m-8910-1121-3141-516171819202\",\n            \"nombre\": \"Cultura gastronómica Santandereana\",\n            \"descripcion\": \"La cultura gastronómica de Santander se caracteriza por platos como la pepitoria, la hormiga culona, y el mute. Es una cocina que conserva tradiciones indígenas y campesinas, utilizando ingredientes como el maíz, la yuca, y el cabro.\"\n        },\n        {\n            \"id\": \"5k6l7m8n-9101-1213-1415-161718192021\",\n            \"nombre\": \"Cultura gastronómica Cundiboyacense\",\n            \"descripcion\": \"La gastronomía cundiboyacense incluye platos emblemáticos como la fritanga, el ajiaco santafereño, y los postres como la cuajada con melao. Es una cocina que refleja la mezcla de tradiciones indígenas con influencias españolas, utilizando ingredientes como la papa, el maíz, y el pollo.\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get an invalid país",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The country with the given id was not found\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/paises/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"paises",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get an invalid país",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/paises/NAN",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paises",
										"NAN"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The país with the given alpha2 was not found\"\n}"
						},
						{
							"name": "Get an invalid país",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/paises/NAN",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paises",
										"NAN"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "75"
								},
								{
									"key": "ETag",
									"value": "W/\"4b-nCWN22vet30UOpsv3K5AHLm3dfE\""
								},
								{
									"key": "Date",
									"value": "Mon, 09 Sep 2024 03:05:18 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The pais with the given alpha2 was not found\"\n}"
						}
					]
				},
				{
					"name": "Update a país",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Mexico\",\n    \"alpha2\": \"MX\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/paises/{{paisId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"paises",
								"{{paisId}}"
							]
						}
					},
					"response": [
						{
							"name": "Update a país",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nombre\": \"Colombia-LA\",\n    \"alpha2\": \"CO\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paises/{{alpha2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paises",
										"{{alpha2}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"nombre\": \"Colombia-LA\",\n    \"alpha2\": \"CO\"\n}"
						}
					]
				},
				{
					"name": "Update an invalid país",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The country with the given id was not found\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Colombia-LA\",\n    \"alpha2\": \"CO\",\n    \"ciudades\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/paises/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"paises",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Update an invalid país",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nombre\": \"Colombia-LA\",\n    \"alpha2\": \"CO\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/paises/{{alpha2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paises",
										"{{alpha2}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The pais with the given alpha2 was not found\"\n}"
						}
					]
				},
				{
					"name": "Delete a país",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/paises/{{paisId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"paises",
								"{{paisId}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a país",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/paises/{{alpha2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paises",
										"{{alpha2}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an invalid país",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql('The country with the given id was not found');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/paises/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"paises",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Delete a país",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/paises/NAN",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paises",
										"NAN"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The país with the given alpha2 was not found\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Ciudad",
			"item": [
				{
					"name": "ciudad-restaurante",
					"item": [
						{
							"name": "Add a ciudad",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();",
											"pm.globals.set(\"ciudadId\", data.id);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nombre\": \"Medellín\",\n    \"codigo\":\"MED\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ciudades",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudades"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a restaurante",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"pm.globals.set(\"restauranteId\", data.id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Le Cinq\",\r\n    \"estrellasMichelin\": \"3\",\r\n    \"fechaConsecucion\": \"2016-02-01\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/restaurante",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurante"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a restaurante to a ciudad",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"   pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ciudad-restaurante/{{ciudadId}}/restaurantes/{{restauranteId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudad-restaurante",
										"{{ciudadId}}",
										"restaurantes",
										"{{restauranteId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add an invalid restaurante to a ciudad",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The restaurant with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ciudad-restaurante/{{ciudadId}}/restaurantes/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudad-restaurante",
										"{{ciudadId}}",
										"restaurantes",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a restaurante to an invalid ciudad",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The city with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ciudad-restaurante/00000000-0000-0000-0000-000000000000/restaurantes/{{restauranteId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudad-restaurante",
										"00000000-0000-0000-0000-000000000000",
										"restaurantes",
										"{{restauranteId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a restaurante of a ciudad",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"   pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ciudad-restaurante/{{ciudadId}}/restaurantes/{{restauranteId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudad-restaurante",
										"{{ciudadId}}",
										"restaurantes",
										"{{restauranteId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get an invalid restaurante of a ciudad",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The restaurant with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ciudad-restaurante/{{ciudadId}}/restaurantes/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudad-restaurante",
										"{{ciudadId}}",
										"restaurantes",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a producto of an invalid categoria",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The city with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ciudad-restaurante/00000000-0000-0000-0000-000000000000/restaurantes/{{restauranteId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudad-restaurante",
										"00000000-0000-0000-0000-000000000000",
										"restaurantes",
										"{{restauranteId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a restaurante 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"pm.globals.set(\"restauranteId2\", data.id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Le Cinq\",\r\n    \"estrellasMichelin\": \"3\",\r\n    \"fechaConsecucion\": \"2016-02-01\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/restaurante",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurante"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a restaurante non-associated to a ciudad",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 412\", function () {\r",
											"   pm.response.to.have.status(412);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The restaurant with the given id is not associated with the city\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ciudad-restaurante/{{ciudadId}}/restaurantes/{{restauranteId2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudad-restaurante",
										"{{ciudadId}}",
										"restaurantes",
										"{{restauranteId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all restaurantes of a ciudad",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"   pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ciudad-restaurante/{{ciudadId}}/restaurantes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudad-restaurante",
										"{{ciudadId}}",
										"restaurantes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all restaurantes of an invalid ciudad",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The city with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ciudad-restaurante/00000000-0000-0000-0000-000000000000/restaurantes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudad-restaurante",
										"00000000-0000-0000-0000-000000000000",
										"restaurantes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update restaurantes of a ciudad",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"   pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"nombre\": \"Le Cinq\",\r\n        \"estrellasMichelin\": \"3\",\r\n        \"fechaConsecucion\": \"2016-02-01\"\r\n    },\r\n    {\r\n        \"nombre\": \"Motza\",\r\n        \"estrellasMichelin\": \"4\",\r\n        \"fechaConsecucion\": \"2017-02-01\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ciudad-restaurante/{{ciudadId}}/restaurantes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudad-restaurante",
										"{{ciudadId}}",
										"restaurantes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update invalid restaurantes of a ciudad",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The restaurant with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n    },\r\n    {\r\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ciudad-restaurante/{{ciudadId}}/restaurantes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudad-restaurante",
										"{{ciudadId}}",
										"restaurantes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update restaurantes of an invalid ciudad",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The city with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"nombre\": \"Venus de Milo de Jalea\",\r\n        \"historia\": \"Homero ve este caramelo en la Feria industrial del Dulce y, luego de que Marge tirara accidentalmente sus caramelos al piso, la roba. Al llegar a la casa, la Venus de Milo se pierde entre los demas dulces, pero luego resulta que se había pegado en los pantalones de Ashley Grant, la niñera. La chica piensa que Homero, al sacarla, trató de abusarla sexualmente, pero luego ve que Homero solo quiso el dulce y lo perdona.\",\r\n        \"descripcion\": \"Es la jalea más rara de todas, esculpida por artesanos de jalea, exclusivos del medio de la jalea\"\r\n    },\r\n    {\r\n        \"nombre\": \"Venus de Milo\",\r\n        \"historia\": \"Homero ve este caramelo en la Feria industrial del Dulce y, luego de que Marge tirara accidentalmente sus caramelos al piso, la roba. Al llegar a la casa, la Venus de Milo se pierde entre los demas dulces, pero luego resulta que se había pegado en los pantalones de Ashley Grant, la niñera. La chica piensa que Homero, al sacarla, trató de abusarla sexualmente, pero luego ve que Homero solo quiso el dulce y lo perdona.\",\r\n        \"descripcion\": \"Es la jalea más rara de todas, esculpida por artesanos de jalea, exclusivos del medio de la jalea\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ciudad-restaurante/00000000-0000-0000-0000-000000000000/restaurantes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudad-restaurante",
										"00000000-0000-0000-0000-000000000000",
										"restaurantes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a restaurante to a ciudad 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"   pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ciudad-restaurante/{{ciudadId}}/restaurantes/{{restauranteId2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudad-restaurante",
										"{{ciudadId}}",
										"restaurantes",
										"{{restauranteId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a restaurante of a ciudad",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"   pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ciudad-restaurante/{{ciudadId}}/restaurantes/{{restauranteId2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudad-restaurante",
										"{{ciudadId}}",
										"restaurantes",
										"{{restauranteId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a restaurante of an invalid ciudad",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The city with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ciudad-restaurante/00000000-0000-0000-0000-000000000000/restaurantes/{{restauranteId2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudad-restaurante",
										"00000000-0000-0000-0000-000000000000",
										"restaurantes",
										"{{restauranteId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete an invalid restaurante of a ciudad",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"   pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The restaurant with the given id was not found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ciudad-restaurante/{{ciudadId}}/restaurantes/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudad-restaurante",
										"{{ciudadId}}",
										"restaurantes",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a restaurante non-associated to a ciudad",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 412\", function () {\r",
											"   pm.response.to.have.status(412);\r",
											"});\r",
											"\r",
											"pm.test(\"Get expected error message\", function () {\r",
											"   var data = pm.response.json();\r",
											"   pm.expect(data.message).to.eql(\"The restaurant with the given id is not associated with the city\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ciudad-restaurante/{{ciudadId}}/restaurantes/{{restauranteId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudad-restaurante",
										"{{ciudadId}}",
										"restaurantes",
										"{{restauranteId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Add a ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.globals.set(\"ciudadId\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Medellín\",\n    \"codigo\":\"MED\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ciudades",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades"
							]
						}
					},
					"response": [
						{
							"name": "Add a ciudad",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nombre\": \"Medellín\",\n    \"codigo\":\"MED\",\n    \"alpha2_país\": \"CO\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ciudades",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudades"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{   \"id\": \"c33cd91f-8fd3-47f3-9914-e5e5be18eda0\",\n    \"nombre\": \"Medellín\",\n    \"codigo\": \"MED\",\n    \"alpha2_país\": \"CO\"\n}"
						}
					]
				},
				{
					"name": "Get all ciudades",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of ciudades > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ciudades",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades"
							]
						}
					},
					"response": [
						{
							"name": "Get all ciudades",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ciudades",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudades"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"c33cd91f-8fd3-47f3-9914-e5e5be18eda0\",\n        \"nombre\": \"Medellín\",\n        \"codigo\": \"MED\",\n        \"alpha2_país\": \"CO\",\n        \"restaurantes\": [\n            {\n                \"id\": \"e1d1f7a1-9091-4d71-88f2-d9eec5e3a0c1\",\n                \"nombre\": \"El Cielo\",\n                \"estrellasMichelin\": 1,\n                \"fechaConsecucion\": \"2021-12-15\"\n            },\n            {\n                \"id\": \"f1b2c3d4-5678-9101-1121-314151617181\",\n                \"nombre\": \"Carmen\",\n                \"estrellasMichelin\": 1,\n                \"fechaConsecucion\": \"2022-06-20\"\n            }\n        ]\n    },\n    {\n        \"id\": \"a22bcf71-8123-44d8-b67f-77f6e6e6f1a9\",\n        \"nombre\": \"Bogotá\",\n        \"codigo\": \"BOG\",\n        \"alpha2_país\": \"CO\",\n        \"restaurantes\": [\n            {\n                \"id\": \"g4h5i6j7-9101-1213-1415-161718192021\",\n                \"nombre\": \"Harry Sasson\",\n                \"estrellasMichelin\": 1,\n                \"fechaConsecucion\": \"2020-11-05\"\n            },\n            {\n                \"id\": \"h8i9j0k1-2345-6789-1011-121314151617\",\n                \"nombre\": \"Leo\",\n                \"estrellasMichelin\": 2,\n                \"fechaConsecucion\": \"2022-03-10\"\n            }\n        ]\n    },\n    {\n        \"id\": \"d88dd0c8-3456-48e9-87f5-0e5e88a9f2c4\",\n        \"nombre\": \"Cartagena\",\n        \"codigo\": \"CTG\",\n        \"alpha2_país\": \"CO\",\n        \"restaurantes\": [\n            {\n                \"id\": \"i2j3k4l5-5678-9101-1121-314151617181\",\n                \"nombre\": \"La Vitrola\",\n                \"estrellasMichelin\": 1,\n                \"fechaConsecucion\": \"2019-09-12\"\n            },\n            {\n                \"id\": \"j6k7l8m9-7891-0112-1314-151617181920\",\n                \"nombre\": \"Candé\",\n                \"estrellasMichelin\": 1,\n                \"fechaConsecucion\": \"2021-05-08\"\n            }\n        ]\n    },\n    {\n        \"id\": \"e2f3d4c5-2345-6789-1011-121314151617\",\n        \"nombre\": \"Cali\",\n        \"codigo\": \"CLO\",\n        \"alpha2_país\": \"CO\",\n        \"restaurantes\": [\n            {\n                \"id\": \"k1l2m3n4-5678-9101-1121-314151617181\",\n                \"nombre\": \"Platillos Voladores\",\n                \"estrellasMichelin\": 1,\n                \"fechaConsecucion\": \"2020-07-17\"\n            },\n            {\n                \"id\": \"l5m6n7o8-6789-1011-1213-141516171820\",\n                \"nombre\": \"Ringlete\",\n                \"estrellasMichelin\": 1,\n                \"fechaConsecucion\": \"2021-02-25\"\n            }\n        ]\n    }\n]"
						}
					]
				},
				{
					"name": "Get one ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ciudades/{{ciudadId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades",
								"{{ciudadId}}"
							]
						}
					},
					"response": [
						{
							"name": "Get one ciudad",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ciudades/{{id_ciudad}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudades",
										"{{id_ciudad}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"c33cd91f-8fd3-47f3-9914-e5e5be18eda0\",\n    \"nombre\": \"Medellín\",\n    \"codigo\": \"MED\",\n    \"alpha2_país\": \"CO\",\n    \"restaurantes\": [\n        {\n            \"id\": \"e1d1f7a1-9091-4d71-88f2-d9eec5e3a0c1\",\n            \"nombre\": \"El Cielo\",\n            \"estrellasMichelin\": 1,\n            \"fechaConsecucion\": \"2021-12-15\"\n        },\n        {\n            \"id\": \"f1b2c3d4-5678-9101-1121-314151617181\",\n            \"nombre\": \"Carmen\",\n            \"estrellasMichelin\": 1,\n            \"fechaConsecucion\": \"2022-06-20\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get an invalid ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The city with the given id was not found\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ciudades/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get an invalid ciudad",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ciudades/NAN",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudades",
										"NAN"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The ciudad with the given codigo was not found\"\n}"
						}
					]
				},
				{
					"name": "Update a ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Bogota\",\r\n    \"codigo\":\"BOG\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ciudades/{{ciudadId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades",
								"{{ciudadId}}"
							]
						}
					},
					"response": [
						{
							"name": "Update a ciudad",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nombre\": \"Medellín-LAT\",\n    \"codigo\":\"MED\",\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ciudades/{{id_ciudad}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudades",
										"{{id_ciudad}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"c33cd91f-8fd3-47f3-9914-e5e5be18eda0\",\n    \"nombre\": \"Medellín-LAT\",\n    \"codigo\": \"MED\",\n    \"alpha2_país\": \"CO\"\n}"
						}
					]
				},
				{
					"name": "Update a invalid ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The city with the given id was not found\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Bogota\",\r\n    \"codigo\":\"BOG\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ciudades/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Update a ciudad",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nombre\": \"Medellín-LAT\",\n    \"codigo\":\"MED\",\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ciudades/{{id_ciudad}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudades",
										"{{id_ciudad}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"c33cd91f-8fd3-47f3-9914-e5e5be18eda0\",\n    \"nombre\": \"Medellín-LAT\",\n    \"codigo\": \"MED\",\n    \"alpha2_país\": \"CO\"\n}"
						}
					]
				},
				{
					"name": "Delete a ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ciudades/{{ciudadId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades",
								"{{ciudadId}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a ciudad",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ciudades/{{id_ciudad}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudades",
										"{{id_ciudad}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a invalid ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql('The city with the given id was not found');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ciudades/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Delete a invalid ciudad",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ciudades/NAN",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ciudades",
										"NAN"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The ciudad with the given codigo was not found\"\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": " http://localhost:3000/api/v1",
			"type": "string"
		},
		{
			"key": "cultura_id",
			"value": ""
		},
		{
			"key": "receta_id",
			"value": ""
		},
		{
			"key": "receta_id_2",
			"value": ""
		},
		{
			"key": "receta_id_1",
			"value": ""
		},
		{
			"key": "categorias_id",
			"value": "categorias"
		},
		{
			"key": "productos_id",
			"value": "productos_id"
		},
		{
			"key": "alpha2",
			"value": "CO"
		},
		{
			"key": "id_ciudad",
			"value": "",
			"type": "string"
		}
	]
}